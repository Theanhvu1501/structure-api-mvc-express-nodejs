name: Node.js CI

on:
  push:
    branches: ["master"]
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v
      - name: Install dependencies and run tests
        run: |
          npm ci
          npm test
  build:
    needs: test
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set IMAGE_TAG variable
        id: set_image_tag
        run: echo "IMAGE_TAG=$(git rev-parse --short=7 ${{ github.sha }})" >> $GITHUB_ENV

      - name: Login Docker hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3.0.0
        id: buildx
      - name: Cache docker images
        uses: actions/cache@v2
        with:
          path: tmp/.buildx-cache
          key: ${{runner.os}}-buildx-${{github.sha}}
          restore-keys: |
            ${{runner.os}}-buildx-
      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{secrets.DOCKERHUB_USER_NAME}}/nodejs
      - name: Build and push
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: ./Dockerfile
          builder: ${{steps.buildx.outputs.name}}
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/buildx-cache

      # - name: _STEP_ Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #     cache: "npm"
      # - run: npm ci
      # - run: pm2 restart node-backend

      # - run: npm run build --if-present
      # - run: npm test
